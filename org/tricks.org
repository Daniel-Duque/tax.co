* find: exclude a type of file
use the ! symbol to negate the next option
for example, this:
  find . -type d ! -name "__pycache__"
excludes anything called __pycache__
* `find -exec`: do something to every found result
** example: copy a file into every folder found
find . -type d -exec cp __init__.py {} \;
* using pytest for programs that import other local programs
Put a line like this before any local import statements:

import sys
sys.path.insert(0, '.') # assuming pytest is run from the top of the project, this
                        # allows local ("python.something.something") imports to work
* draw Makefile dependencies
** https://github.com/lindenb/makefile2graph
** the basic syntax
Substitute something (e.g. "overview") for "target" below:
make <target> -Bnd | make2graph | dot -Tpng -o dependencies.png
** to make it easier to read
First comment out most of the definition of enph_files.
Then run this:

make overview -Bnd vat_strategy="()" | make2graph \
  | sed -r "s/([a-zA-Z0-9_\-\.\(\)]+)\.(csv|py)/\n\1.\2/g" \
  | dot -Tpng -o dependencies.png
* announce the separator used in a .csv file
put something like "sep=;" at the top of the file
* open office cell traversal shortcuts
C-S-F2: go to formula window
C-S-T: go to cell address window ("(T)raverse", probably)
* get pandas to display tables in scientific notation
pd.set_option('display.float_format', '{:.2g}'.format)
* makefile --trace explains why it wants to rebuild something
Kind of useless, though -- it only restates the dependency section of the target it wants to rebuild.
A natural companion to --dry-run.
